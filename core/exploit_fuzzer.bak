#!/bin/bash

# Setup and define colors
RED='\033[1;31m'
GREEN='\033[1;32m'
YELLOW='\033[1;33m'
BLUE='\033[1;34m'
NC='\033[0m'

exploit_hunt_banner() {
  clear
  echo -e "${BLUE}"
  echo "╔═════════════════════════════════════════════════╗"
  echo "     🔓 Exploit Hunt - Vulnerability Scanner 🔍    "
  echo "╚═════════════════════════════════════════════════╝"
  echo -e "${NC}"
}



# Input the target (IP or HTTP)
input_target() {
  exploit_hunt_banner
  echo -e "${YELLOW}Enter the target IP or HTTP URL (e.g., http://example.com):${NC}"
  read -p "Target: " target
}

# Nmap scan (Ports, Services, OS Fingerprinting)
nmap_scan() {
  exploit_hunt_banner
  input_target
  echo -e "${GREEN}[*] Performing Nmap scan on ${target}...${NC}"
  nmap -A -sV -O "$target" -oN "$target-nmap-results.txt"
  echo -e "${GREEN}[+] Nmap scan complete. Results saved as ${target}-nmap-results.txt${NC}"
  sleep 5
}

# Web Directory Fuzzing (Using Gobuster)
gobuster_scan() {
  exploit_hunt_banner
  input_target
  echo -e "${GREEN}[*] Running Gobuster for web directory fuzzing...${NC}"
  gobuster dir -u "$target" -w /path/to/wordlist.txt -o "$target-gobuster-results.txt"
  echo -e "${GREEN}[+] Gobuster scan complete. Results saved as ${target}-gobuster-results.txt${NC}"
}

# Fuzzing options (Basic, Advanced, Custom)
fuzzing_options() {
  exploit_hunt_banner
  echo -e "${YELLOW}Choose a fuzzing method:${NC}"
  echo " 1) Basic Fuzzing (SQLi, XSS, etc.)"
  echo " 2) Advanced Fuzzing (Command Injection, RCE, etc.)"
  echo " 3) Custom Fuzzing (User-defined Payloads)"
  echo " 4) 🔙 Back"
  read -p "Choose an option [1-4]: " fuzz_choice

  case $fuzz_choice in
    1)
      echo -e "${GREEN}[*] Starting basic fuzzing...${NC}"
      # Insert basic fuzzing commands here (SQLi, XSS)
      # Example: sqlmap --url "$target" --forms --batch
      ;;
    2)
      echo -e "${GREEN}[*] Starting advanced fuzzing...${NC}"
      # Insert advanced fuzzing commands here (RCE, Command injection)
      # Example: wfuzz -c -z file,/path/to/wordlist.txt --hc 404 "$target/FUZZ"
      ;;
    3)
      echo -e "${GREEN}[*] Starting custom fuzzing...${NC}"
      # Allow user to input fuzzing parameters or payloads
      ;;
    4)
      exploit_hunt_menu
      ;;
    *)
      echo -e "${RED}Invalid choice. Try again.${NC}"
      fuzzing_options
      ;;
  esac
}

# Vulnerability Scan using Nuclei
nuclei_scan() {
  echo -e "${GREEN}[*] Running Nuclei vulnerability scan...${NC}"
  nuclei -u "$target" -t /path/to/nuclei-templates/ -o "$target-nuclei-results.txt"
  echo -e "${GREEN}[+] Nuclei scan complete. Results saved as ${target}-nuclei-results.txt${NC}"
}

# Search for working exploits based on the service versions discovered
search_exploits() {
  echo -e "${YELLOW}[*] Searching for known exploits for services on ${target}...${NC}"
  # Example: Use searchsploit or GitHub API to find relevant exploits
  searchsploit "$target"
}

# Logging results to a file
log_results() {
  echo -e "${GREEN}[+] Saving results to log file...${NC}"
  # shellcheck disable=SC2129
  echo "Target: $target" >> "$target-exploit-hunt-log.txt"
  echo "----------------------" >> "$target-exploit-hunt-log.txt"
  cat "$target-nmap-results.txt" >> "$target-exploit-hunt-log.txt"
  cat "$target-gobuster-results.txt" >> "$target-exploit-hunt-log.txt"
  cat "$target-nuclei-results.txt" >> "$target-exploit-hunt-log.txt"
  echo -e "${GREEN}[+] Results saved to $target-exploit-hunt-log.txt${NC}"
}

# Export results in multiple formats (JSON, CSV, HTML)
export_results() {
  echo -e "${YELLOW}Exporting results...${NC}"
  # Example: Convert logs to CSV, JSON, or HTML (based on user input)
  # For simplicity, convert Nmap results to CSV
  nmap -oX "$target-nmap-results.xml" "$target"
  xsltproc "$target-nmap-results.xml" -o "$target-nmap-results.html"
  echo -e "${GREEN}[+] Results exported to HTML: $target-nmap-results.html${NC}"
}

# Main menu for exploit hunt module
exploit_hunt_menu() {
  exploit_hunt_banner
  echo -e "${YELLOW}[*] Select an action:${NC}"
  echo " 1) Run Advanced Scan (Ports, Services, OS)"
  echo " 2) Run Web Directory Fuzzing"
  echo " 3) Fuzz Inputs (SQLi, XSS, etc.)"
  echo " 4) Run Vulnerability Scan (Nuclei)"
  echo " 5) Search for Known Exploits"
  echo " 6) Log Results"
  echo " 7) Export Results (HTML, CSV, JSON)"
  echo " 8) 🔙 Back to Main Menu"
  read -p "Option [1-8]: " exploit_option

  case $exploit_option in
    1)
      nmap_scan
      exploit_hunt_menu
      ;;
    2)
      gobuster_scan
      exploit_hunt_menu
      ;;
    3)
      fuzzing_options
      exploit_hunt_menu
      ;;
    4)
      nuclei_scan
      exploit_hunt_menu
      ;;
    5)
      search_exploits
      exploit_hunt_menu
      ;;
    6)
      log_results
      exploit_hunt_menu
      ;;
    7)
      export_results
      exploit_hunt_menu
      ;;
    8)
      bash LazySuzann.sh
      ;;
    *)
      echo -e "${RED}Invalid option, try again.${NC}"
      exploit_hunt_menu
      ;;
  esac
}

# Start the exploit hunt module
exploit_hunt_menu
